---
type Variant = "primary" | "secondary" | "primary-dark";

const colors: Record<Variant, string> = {
	primary:
		"bg-transparent text-white hover:bg-white hover:text-swamp disabled:text-white/25 disabled:bg-transparent",
	secondary: "bg-white text-swamp hover:bg-baked disabled:bg-white/25",
	"primary-dark": "bg-transparent text-daintree hover:bg-daintree hover:text-white disabled:text-white/25 disabled:bg-transparent"
};

const borders: Record<Variant, string> = {
	primary:
		"border-solid border-2 border-transparent rounded-3xl disabled:border-white/25",
	secondary: "rounded-3xl",
	"primary-dark": "border-solid border-2 border-daintree rounded-3xl disabled:border-white/25"
};

interface Props {
	variant?: Variant;
	disabled?: boolean;
	href?: string;
	target?: string;
	className?: string;
	onClick: () => void;
}

const {
	variant = "primary",
	disabled = false,
	href,
	target,
	className,
	onClick
} = Astro.props;

const baseClasses = [
	"inline-flex py-2 px-8 text-18 font-semibold lowercase transition duration-500 hover:cursor-pointer disabled:cursor-not-allowed",
	colors[variant],
	borders[variant],
	className
]
	.filter(Boolean)
	.join(" ");
---

{
	href ? (
	<a role="link" href={href} target={target} class={baseClasses} aria-disabled={disabled}>
		<slot />
	</a>
		) : (
	<button disabled={disabled} onClick={onClick} class={baseClasses}>
		<slot />
	</button>
		)
	}
